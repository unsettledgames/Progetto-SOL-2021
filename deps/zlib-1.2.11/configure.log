--------------------
./configure
Sat 22 May 2021 12:05:00 PM CEST
Checking for gcc...
=== ztest1015.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1015.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1015.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1015.c

Checking for shared library support...
=== ztest1015.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1015.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1015.so ztest1015.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1015.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1015.c
Checking for size_t... Yes.


=== ztest1015.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1015.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1015.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1015 ztest1015.c
Checking for strerror... Yes.

=== ztest1015.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1015.c
Checking for unistd.h... Yes.

=== ztest1015.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1015.c
Checking for stdarg.h... Yes.

=== ztest1015.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1015.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1015.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1015 ztest1015.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1015.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1015.c
Checking for return value of vsnprintf()... Yes.

=== ztest1015.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1015.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 22 May 2021 01:08:24 PM CEST
Checking for gcc...
=== ztest1870.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1870.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1870.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1870.c

Checking for shared library support...
=== ztest1870.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1870.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1870.so ztest1870.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1870.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1870.c
Checking for size_t... Yes.


=== ztest1870.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1870.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1870.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1870 ztest1870.c
Checking for strerror... Yes.

=== ztest1870.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1870.c
Checking for unistd.h... Yes.

=== ztest1870.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1870.c
Checking for stdarg.h... Yes.

=== ztest1870.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1870.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1870.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1870 ztest1870.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1870.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1870.c
Checking for return value of vsnprintf()... Yes.

=== ztest1870.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1870.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 22 May 2021 01:09:31 PM CEST
Checking for gcc...
=== ztest2190.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2190.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2190.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2190.c

Checking for shared library support...
=== ztest2190.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2190.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2190.so ztest2190.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest2190.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest2190.c
Checking for size_t... Yes.


=== ztest2190.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2190.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2190.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2190 ztest2190.c
Checking for strerror... Yes.

=== ztest2190.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2190.c
Checking for unistd.h... Yes.

=== ztest2190.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2190.c
Checking for stdarg.h... Yes.

=== ztest2190.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2190.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2190.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2190 ztest2190.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2190.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2190.c
Checking for return value of vsnprintf()... Yes.

=== ztest2190.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2190.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 22 May 2021 01:22:01 PM CEST
Checking for gcc...
=== ztest2587.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2587.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2587.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2587.c

Checking for shared library support...
=== ztest2587.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2587.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2587.so ztest2587.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest2587.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest2587.c
Checking for size_t... Yes.


=== ztest2587.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2587.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2587.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2587 ztest2587.c
Checking for strerror... Yes.

=== ztest2587.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2587.c
Checking for unistd.h... Yes.

=== ztest2587.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2587.c
Checking for stdarg.h... Yes.

=== ztest2587.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2587.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2587.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2587 ztest2587.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2587.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2587.c
Checking for return value of vsnprintf()... Yes.

=== ztest2587.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2587.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun 23 May 2021 10:47:44 AM CEST
Checking for gcc...
=== ztest606.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest606.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest606.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest606.c

Checking for shared library support...
=== ztest606.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest606.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest606.so ztest606.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest606.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest606.c
Checking for size_t... Yes.


=== ztest606.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest606.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest606.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest606 ztest606.c
Checking for strerror... Yes.

=== ztest606.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest606.c
Checking for unistd.h... Yes.

=== ztest606.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest606.c
Checking for stdarg.h... Yes.

=== ztest606.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest606.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest606.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest606 ztest606.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest606.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest606.c
Checking for return value of vsnprintf()... Yes.

=== ztest606.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest606.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun 23 May 2021 10:48:37 AM CEST
Checking for gcc...
=== ztest966.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest966.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest966.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest966.c

Checking for shared library support...
=== ztest966.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest966.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest966.so ztest966.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest966.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest966.c
Checking for size_t... Yes.


=== ztest966.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest966.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest966.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest966 ztest966.c
Checking for strerror... Yes.

=== ztest966.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest966.c
Checking for unistd.h... Yes.

=== ztest966.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest966.c
Checking for stdarg.h... Yes.

=== ztest966.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest966.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest966.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest966 ztest966.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest966.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest966.c
Checking for return value of vsnprintf()... Yes.

=== ztest966.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest966.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 24 May 2021 12:28:08 PM CEST
Checking for gcc...
=== ztest231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest231.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest231.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest231.c

Checking for shared library support...
=== ztest231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest231.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest231.so ztest231.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest231.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest231.c
Checking for size_t... Yes.


=== ztest231.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest231.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest231.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest231 ztest231.c
Checking for strerror... Yes.

=== ztest231.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest231.c
Checking for unistd.h... Yes.

=== ztest231.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest231.c
Checking for stdarg.h... Yes.

=== ztest231.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest231.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest231 ztest231.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest231.c
Checking for return value of vsnprintf()... Yes.

=== ztest231.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest231.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 25 May 2021 09:11:35 AM CEST
Checking for gcc...
=== ztest108.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest108.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest108.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest108.c

Checking for shared library support...
=== ztest108.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest108.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest108.so ztest108.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest108.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest108.c
Checking for size_t... Yes.


=== ztest108.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest108.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest108 ztest108.c
Checking for strerror... Yes.

=== ztest108.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108.c
Checking for unistd.h... Yes.

=== ztest108.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108.c
Checking for stdarg.h... Yes.

=== ztest108.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest108.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest108 ztest108.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest108.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108.c
Checking for return value of vsnprintf()... Yes.

=== ztest108.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 25 May 2021 09:12:06 AM CEST
Checking for gcc...
=== ztest463.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest463.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest463.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest463.c

Checking for shared library support...
=== ztest463.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest463.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest463.so ztest463.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest463.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest463.c
Checking for size_t... Yes.


=== ztest463.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest463.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest463.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest463 ztest463.c
Checking for strerror... Yes.

=== ztest463.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest463.c
Checking for unistd.h... Yes.

=== ztest463.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest463.c
Checking for stdarg.h... Yes.

=== ztest463.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest463.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest463.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest463 ztest463.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest463.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest463.c
Checking for return value of vsnprintf()... Yes.

=== ztest463.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest463.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 25 May 2021 09:13:47 AM CEST
Checking for gcc...
=== ztest819.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest819.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest819.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest819.c

Checking for shared library support...
=== ztest819.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest819.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest819.so ztest819.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest819.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest819.c
Checking for size_t... Yes.


=== ztest819.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest819.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest819.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest819 ztest819.c
Checking for strerror... Yes.

=== ztest819.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest819.c
Checking for unistd.h... Yes.

=== ztest819.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest819.c
Checking for stdarg.h... Yes.

=== ztest819.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest819.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest819.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest819 ztest819.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest819.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest819.c
Checking for return value of vsnprintf()... Yes.

=== ztest819.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest819.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 25 May 2021 10:19:03 AM CEST
Checking for gcc...
=== ztest1284.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1284.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1284.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1284.c

Checking for shared library support...
=== ztest1284.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1284.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1284.so ztest1284.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1284.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1284.c
Checking for size_t... Yes.


=== ztest1284.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1284.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1284.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1284 ztest1284.c
Checking for strerror... Yes.

=== ztest1284.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1284.c
Checking for unistd.h... Yes.

=== ztest1284.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1284.c
Checking for stdarg.h... Yes.

=== ztest1284.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1284.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1284.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1284 ztest1284.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1284.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1284.c
Checking for return value of vsnprintf()... Yes.

=== ztest1284.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1284.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 25 May 2021 10:22:18 AM CEST
Checking for gcc...
=== ztest1651.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1651.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1651.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1651.c

Checking for shared library support...
=== ztest1651.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1651.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1651.so ztest1651.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1651.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1651.c
Checking for size_t... Yes.


=== ztest1651.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1651.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1651.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1651 ztest1651.c
Checking for strerror... Yes.

=== ztest1651.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1651.c
Checking for unistd.h... Yes.

=== ztest1651.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1651.c
Checking for stdarg.h... Yes.

=== ztest1651.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1651.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1651.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1651 ztest1651.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1651.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1651.c
Checking for return value of vsnprintf()... Yes.

=== ztest1651.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1651.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed 26 May 2021 12:27:37 PM CEST
Checking for gcc...
=== ztest6124.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6124.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6124.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6124.c

Checking for shared library support...
=== ztest6124.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6124.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6124.so ztest6124.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest6124.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest6124.c
Checking for size_t... Yes.


=== ztest6124.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6124.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6124.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6124 ztest6124.c
Checking for strerror... Yes.

=== ztest6124.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6124.c
Checking for unistd.h... Yes.

=== ztest6124.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6124.c
Checking for stdarg.h... Yes.

=== ztest6124.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6124.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6124.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6124 ztest6124.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6124.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6124.c
Checking for return value of vsnprintf()... Yes.

=== ztest6124.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6124.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 29 May 2021 12:27:34 AM CEST
Checking for gcc...
=== ztest3035.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3035.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3035.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3035.c

Checking for shared library support...
=== ztest3035.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3035.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3035.so ztest3035.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest3035.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest3035.c
Checking for size_t... Yes.


=== ztest3035.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3035.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3035.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3035 ztest3035.c
Checking for strerror... Yes.

=== ztest3035.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3035.c
Checking for unistd.h... Yes.

=== ztest3035.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3035.c
Checking for stdarg.h... Yes.

=== ztest3035.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3035.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3035.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3035 ztest3035.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3035.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3035.c
Checking for return value of vsnprintf()... Yes.

=== ztest3035.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3035.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 29 May 2021 12:38:57 AM CEST
Checking for gcc...
=== ztest4257.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4257.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4257.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4257.c

Checking for shared library support...
=== ztest4257.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4257.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4257.so ztest4257.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest4257.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4257.c
Checking for size_t... Yes.


=== ztest4257.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4257.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4257.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4257 ztest4257.c
Checking for strerror... Yes.

=== ztest4257.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4257.c
Checking for unistd.h... Yes.

=== ztest4257.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4257.c
Checking for stdarg.h... Yes.

=== ztest4257.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4257.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4257.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4257 ztest4257.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4257.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4257.c
Checking for return value of vsnprintf()... Yes.

=== ztest4257.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4257.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 29 May 2021 08:55:29 AM CEST
Checking for gcc...
=== ztest311.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest311.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest311.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest311.c

Checking for shared library support...
=== ztest311.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest311.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest311.so ztest311.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest311.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest311.c
Checking for size_t... Yes.


=== ztest311.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest311.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest311.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest311 ztest311.c
Checking for strerror... Yes.

=== ztest311.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest311.c
Checking for unistd.h... Yes.

=== ztest311.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest311.c
Checking for stdarg.h... Yes.

=== ztest311.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest311.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest311.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest311 ztest311.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest311.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest311.c
Checking for return value of vsnprintf()... Yes.

=== ztest311.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest311.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun 30 May 2021 06:22:37 PM CEST
Checking for gcc...
=== ztest70.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest70.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest70.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest70.c

Checking for shared library support...
=== ztest70.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest70.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest70.so ztest70.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest70.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest70.c
Checking for size_t... Yes.


=== ztest70.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest70.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest70.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest70 ztest70.c
Checking for strerror... Yes.

=== ztest70.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest70.c
Checking for unistd.h... Yes.

=== ztest70.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest70.c
Checking for stdarg.h... Yes.

=== ztest70.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest70.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest70.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest70 ztest70.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest70.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest70.c
Checking for return value of vsnprintf()... Yes.

=== ztest70.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest70.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun 30 May 2021 06:23:55 PM CEST
Checking for gcc...
=== ztest449.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest449.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest449.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest449.c

Checking for shared library support...
=== ztest449.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest449.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest449.so ztest449.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest449.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest449.c
Checking for size_t... Yes.


=== ztest449.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest449.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest449.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest449 ztest449.c
Checking for strerror... Yes.

=== ztest449.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest449.c
Checking for unistd.h... Yes.

=== ztest449.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest449.c
Checking for stdarg.h... Yes.

=== ztest449.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest449.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest449.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest449 ztest449.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest449.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest449.c
Checking for return value of vsnprintf()... Yes.

=== ztest449.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest449.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun 30 May 2021 06:29:06 PM CEST
Checking for gcc...
=== ztest941.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest941.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest941.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest941.c

Checking for shared library support...
=== ztest941.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest941.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest941.so ztest941.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest941.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest941.c
Checking for size_t... Yes.


=== ztest941.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest941.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest941.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest941 ztest941.c
Checking for strerror... Yes.

=== ztest941.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest941.c
Checking for unistd.h... Yes.

=== ztest941.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest941.c
Checking for stdarg.h... Yes.

=== ztest941.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest941.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest941.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest941 ztest941.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest941.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest941.c
Checking for return value of vsnprintf()... Yes.

=== ztest941.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest941.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun 30 May 2021 06:34:19 PM CEST
Checking for gcc...
=== ztest1332.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1332.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1332.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1332.c

Checking for shared library support...
=== ztest1332.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1332.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1332.so ztest1332.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1332.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1332.c
Checking for size_t... Yes.


=== ztest1332.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1332.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1332.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1332 ztest1332.c
Checking for strerror... Yes.

=== ztest1332.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1332.c
Checking for unistd.h... Yes.

=== ztest1332.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1332.c
Checking for stdarg.h... Yes.

=== ztest1332.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1332.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1332.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1332 ztest1332.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1332.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1332.c
Checking for return value of vsnprintf()... Yes.

=== ztest1332.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1332.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 10:22:15 AM CEST
Checking for gcc...
=== ztest227.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest227.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest227.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest227.c

Checking for shared library support...
=== ztest227.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest227.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest227.so ztest227.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest227.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest227.c
Checking for size_t... Yes.


=== ztest227.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest227.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest227.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest227 ztest227.c
Checking for strerror... Yes.

=== ztest227.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest227.c
Checking for unistd.h... Yes.

=== ztest227.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest227.c
Checking for stdarg.h... Yes.

=== ztest227.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest227.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest227.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest227 ztest227.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest227.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest227.c
Checking for return value of vsnprintf()... Yes.

=== ztest227.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest227.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 10:56:17 AM CEST
Checking for gcc...
=== ztest615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest615.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest615.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest615.c

Checking for shared library support...
=== ztest615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest615.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest615.so ztest615.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest615.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest615.c
Checking for size_t... Yes.


=== ztest615.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest615.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest615.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest615 ztest615.c
Checking for strerror... Yes.

=== ztest615.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest615.c
Checking for unistd.h... Yes.

=== ztest615.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest615.c
Checking for stdarg.h... Yes.

=== ztest615.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest615.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest615 ztest615.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest615.c
Checking for return value of vsnprintf()... Yes.

=== ztest615.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest615.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 11:32:53 AM CEST
Checking for gcc...
=== ztest990.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest990.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest990.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest990.c

Checking for shared library support...
=== ztest990.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest990.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest990.so ztest990.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest990.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest990.c
Checking for size_t... Yes.


=== ztest990.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest990.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest990.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest990 ztest990.c
Checking for strerror... Yes.

=== ztest990.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest990.c
Checking for unistd.h... Yes.

=== ztest990.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest990.c
Checking for stdarg.h... Yes.

=== ztest990.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest990.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest990.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest990 ztest990.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest990.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest990.c
Checking for return value of vsnprintf()... Yes.

=== ztest990.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest990.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 11:46:08 AM CEST
Checking for gcc...
=== ztest1345.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1345.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1345.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1345.c

Checking for shared library support...
=== ztest1345.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1345.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1345.so ztest1345.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1345.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1345.c
Checking for size_t... Yes.


=== ztest1345.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1345.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1345.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1345 ztest1345.c
Checking for strerror... Yes.

=== ztest1345.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1345.c
Checking for unistd.h... Yes.

=== ztest1345.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1345.c
Checking for stdarg.h... Yes.

=== ztest1345.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1345.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1345.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1345 ztest1345.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1345.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1345.c
Checking for return value of vsnprintf()... Yes.

=== ztest1345.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1345.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 01:03:07 PM CEST
Checking for gcc...
=== ztest4282.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4282.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4282.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4282.c

Checking for shared library support...
=== ztest4282.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4282.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4282.so ztest4282.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest4282.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4282.c
Checking for size_t... Yes.


=== ztest4282.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4282.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4282.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4282 ztest4282.c
Checking for strerror... Yes.

=== ztest4282.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4282.c
Checking for unistd.h... Yes.

=== ztest4282.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4282.c
Checking for stdarg.h... Yes.

=== ztest4282.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4282.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4282.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4282 ztest4282.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4282.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4282.c
Checking for return value of vsnprintf()... Yes.

=== ztest4282.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4282.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 01:15:57 PM CEST
Checking for gcc...
=== ztest4908.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4908.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4908.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4908.c

Checking for shared library support...
=== ztest4908.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4908.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4908.so ztest4908.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest4908.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4908.c
Checking for size_t... Yes.


=== ztest4908.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4908.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4908.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4908 ztest4908.c
Checking for strerror... Yes.

=== ztest4908.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4908.c
Checking for unistd.h... Yes.

=== ztest4908.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4908.c
Checking for stdarg.h... Yes.

=== ztest4908.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4908.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4908.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4908 ztest4908.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4908.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4908.c
Checking for return value of vsnprintf()... Yes.

=== ztest4908.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4908.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 03:16:48 PM CEST
Checking for gcc...
=== ztest434.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest434.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest434.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest434.c

Checking for shared library support...
=== ztest434.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest434.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest434.so ztest434.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest434.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest434.c
Checking for size_t... Yes.


=== ztest434.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest434.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest434.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest434 ztest434.c
Checking for strerror... Yes.

=== ztest434.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest434.c
Checking for unistd.h... Yes.

=== ztest434.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest434.c
Checking for stdarg.h... Yes.

=== ztest434.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest434.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest434.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest434 ztest434.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest434.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest434.c
Checking for return value of vsnprintf()... Yes.

=== ztest434.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest434.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 07:40:29 PM CEST
Checking for gcc...
=== ztest10237.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10237.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10237.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10237.c

Checking for shared library support...
=== ztest10237.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10237.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10237.so ztest10237.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest10237.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest10237.c
Checking for size_t... Yes.


=== ztest10237.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10237.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10237.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10237 ztest10237.c
Checking for strerror... Yes.

=== ztest10237.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10237.c
Checking for unistd.h... Yes.

=== ztest10237.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10237.c
Checking for stdarg.h... Yes.

=== ztest10237.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10237.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10237.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10237 ztest10237.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10237.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10237.c
Checking for return value of vsnprintf()... Yes.

=== ztest10237.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10237.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 07:54:52 PM CEST
Checking for gcc...
=== ztest11539.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11539.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11539.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11539.c

Checking for shared library support...
=== ztest11539.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11539.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11539.so ztest11539.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest11539.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest11539.c
Checking for size_t... Yes.


=== ztest11539.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11539.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11539.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11539 ztest11539.c
Checking for strerror... Yes.

=== ztest11539.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11539.c
Checking for unistd.h... Yes.

=== ztest11539.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11539.c
Checking for stdarg.h... Yes.

=== ztest11539.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11539.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11539.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11539 ztest11539.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11539.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11539.c
Checking for return value of vsnprintf()... Yes.

=== ztest11539.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11539.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Mon 31 May 2021 11:43:21 PM CEST
Checking for gcc...
=== ztest5643.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5643.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5643.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5643.c

Checking for shared library support...
=== ztest5643.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5643.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5643.so ztest5643.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest5643.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest5643.c
Checking for size_t... Yes.


=== ztest5643.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5643.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5643.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5643 ztest5643.c
Checking for strerror... Yes.

=== ztest5643.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5643.c
Checking for unistd.h... Yes.

=== ztest5643.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5643.c
Checking for stdarg.h... Yes.

=== ztest5643.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5643.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5643.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5643 ztest5643.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5643.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5643.c
Checking for return value of vsnprintf()... Yes.

=== ztest5643.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5643.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 09:27:17 AM CEST
Checking for gcc...
=== ztest436.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest436.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest436.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest436.c

Checking for shared library support...
=== ztest436.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest436.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest436.so ztest436.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest436.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest436.c
Checking for size_t... Yes.


=== ztest436.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest436.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest436.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest436 ztest436.c
Checking for strerror... Yes.

=== ztest436.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest436.c
Checking for unistd.h... Yes.

=== ztest436.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest436.c
Checking for stdarg.h... Yes.

=== ztest436.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest436.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest436.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest436 ztest436.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest436.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest436.c
Checking for return value of vsnprintf()... Yes.

=== ztest436.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest436.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 09:28:03 AM CEST
Checking for gcc...
=== ztest1002.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1002.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1002.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1002.c

Checking for shared library support...
=== ztest1002.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1002.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1002.so ztest1002.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1002.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1002.c
Checking for size_t... Yes.


=== ztest1002.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1002.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1002.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1002 ztest1002.c
Checking for strerror... Yes.

=== ztest1002.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1002.c
Checking for unistd.h... Yes.

=== ztest1002.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1002.c
Checking for stdarg.h... Yes.

=== ztest1002.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1002.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1002.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1002 ztest1002.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1002.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1002.c
Checking for return value of vsnprintf()... Yes.

=== ztest1002.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1002.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 10:13:36 AM CEST
Checking for gcc...
=== ztest2834.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2834.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2834.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2834.c

Checking for shared library support...
=== ztest2834.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2834.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2834.so ztest2834.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest2834.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest2834.c
Checking for size_t... Yes.


=== ztest2834.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2834.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2834.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2834 ztest2834.c
Checking for strerror... Yes.

=== ztest2834.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2834.c
Checking for unistd.h... Yes.

=== ztest2834.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2834.c
Checking for stdarg.h... Yes.

=== ztest2834.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2834.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2834.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2834 ztest2834.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2834.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2834.c
Checking for return value of vsnprintf()... Yes.

=== ztest2834.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2834.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 10:20:33 AM CEST
Checking for gcc...
=== ztest3319.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3319.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3319.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3319.c

Checking for shared library support...
=== ztest3319.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3319.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3319.so ztest3319.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest3319.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest3319.c
Checking for size_t... Yes.


=== ztest3319.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3319.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3319.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3319 ztest3319.c
Checking for strerror... Yes.

=== ztest3319.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3319.c
Checking for unistd.h... Yes.

=== ztest3319.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3319.c
Checking for stdarg.h... Yes.

=== ztest3319.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3319.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3319.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3319 ztest3319.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3319.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3319.c
Checking for return value of vsnprintf()... Yes.

=== ztest3319.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3319.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 11:03:38 AM CEST
Checking for gcc...
=== ztest5343.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5343.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5343.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5343.c

Checking for shared library support...
=== ztest5343.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5343.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5343.so ztest5343.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest5343.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest5343.c
Checking for size_t... Yes.


=== ztest5343.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5343.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5343.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5343 ztest5343.c
Checking for strerror... Yes.

=== ztest5343.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5343.c
Checking for unistd.h... Yes.

=== ztest5343.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5343.c
Checking for stdarg.h... Yes.

=== ztest5343.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5343.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5343.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5343 ztest5343.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5343.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5343.c
Checking for return value of vsnprintf()... Yes.

=== ztest5343.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5343.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 11:06:52 AM CEST
Checking for gcc...
=== ztest5809.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5809.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5809.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5809.c

Checking for shared library support...
=== ztest5809.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5809.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5809.so ztest5809.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest5809.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest5809.c
Checking for size_t... Yes.


=== ztest5809.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5809.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5809.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5809 ztest5809.c
Checking for strerror... Yes.

=== ztest5809.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5809.c
Checking for unistd.h... Yes.

=== ztest5809.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5809.c
Checking for stdarg.h... Yes.

=== ztest5809.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5809.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5809.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5809 ztest5809.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5809.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5809.c
Checking for return value of vsnprintf()... Yes.

=== ztest5809.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5809.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 03:22:28 PM CEST
Checking for gcc...
=== ztest58.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest58.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest58.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest58.c

Checking for shared library support...
=== ztest58.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest58.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest58.so ztest58.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest58.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest58.c
Checking for size_t... Yes.


=== ztest58.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest58.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest58 ztest58.c
Checking for strerror... Yes.

=== ztest58.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58.c
Checking for unistd.h... Yes.

=== ztest58.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58.c
Checking for stdarg.h... Yes.

=== ztest58.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest58.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest58 ztest58.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest58.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58.c
Checking for return value of vsnprintf()... Yes.

=== ztest58.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 04:13:53 PM CEST
Checking for gcc...
=== ztest1327.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1327.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1327.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1327.c

Checking for shared library support...
=== ztest1327.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1327.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1327.so ztest1327.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest1327.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1327.c
Checking for size_t... Yes.


=== ztest1327.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1327.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1327.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1327 ztest1327.c
Checking for strerror... Yes.

=== ztest1327.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1327.c
Checking for unistd.h... Yes.

=== ztest1327.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1327.c
Checking for stdarg.h... Yes.

=== ztest1327.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1327.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1327.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1327 ztest1327.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1327.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1327.c
Checking for return value of vsnprintf()... Yes.

=== ztest1327.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1327.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 04:58:34 PM CEST
Checking for gcc...
=== ztest3854.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3854.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3854.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3854.c

Checking for shared library support...
=== ztest3854.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3854.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3854.so ztest3854.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest3854.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest3854.c
Checking for size_t... Yes.


=== ztest3854.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3854.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3854.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3854 ztest3854.c
Checking for strerror... Yes.

=== ztest3854.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3854.c
Checking for unistd.h... Yes.

=== ztest3854.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3854.c
Checking for stdarg.h... Yes.

=== ztest3854.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3854.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3854.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3854 ztest3854.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3854.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3854.c
Checking for return value of vsnprintf()... Yes.

=== ztest3854.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3854.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:00:35 PM CEST
Checking for gcc...
=== ztest4467.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4467.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4467.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4467.c

Checking for shared library support...
=== ztest4467.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4467.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4467.so ztest4467.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest4467.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4467.c
Checking for size_t... Yes.


=== ztest4467.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4467.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4467.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4467 ztest4467.c
Checking for strerror... Yes.

=== ztest4467.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4467.c
Checking for unistd.h... Yes.

=== ztest4467.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4467.c
Checking for stdarg.h... Yes.

=== ztest4467.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4467.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4467.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4467 ztest4467.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4467.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4467.c
Checking for return value of vsnprintf()... Yes.

=== ztest4467.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4467.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:01:09 PM CEST
Checking for gcc...
=== ztest4822.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4822.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4822.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4822.c

Checking for shared library support...
=== ztest4822.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4822.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4822.so ztest4822.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest4822.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4822.c
Checking for size_t... Yes.


=== ztest4822.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4822.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4822.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4822 ztest4822.c
Checking for strerror... Yes.

=== ztest4822.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4822.c
Checking for unistd.h... Yes.

=== ztest4822.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4822.c
Checking for stdarg.h... Yes.

=== ztest4822.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4822.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4822.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4822 ztest4822.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4822.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4822.c
Checking for return value of vsnprintf()... Yes.

=== ztest4822.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4822.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:03:07 PM CEST
Checking for gcc...
=== ztest5262.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5262.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5262.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5262.c

Checking for shared library support...
=== ztest5262.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5262.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5262.so ztest5262.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest5262.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest5262.c
Checking for size_t... Yes.


=== ztest5262.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5262.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5262.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5262 ztest5262.c
Checking for strerror... Yes.

=== ztest5262.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5262.c
Checking for unistd.h... Yes.

=== ztest5262.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5262.c
Checking for stdarg.h... Yes.

=== ztest5262.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5262.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5262.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5262 ztest5262.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5262.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5262.c
Checking for return value of vsnprintf()... Yes.

=== ztest5262.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5262.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:03:42 PM CEST
Checking for gcc...
=== ztest5610.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5610.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5610.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5610.c

Checking for shared library support...
=== ztest5610.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5610.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5610.so ztest5610.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest5610.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest5610.c
Checking for size_t... Yes.


=== ztest5610.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5610.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5610.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5610 ztest5610.c
Checking for strerror... Yes.

=== ztest5610.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5610.c
Checking for unistd.h... Yes.

=== ztest5610.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5610.c
Checking for stdarg.h... Yes.

=== ztest5610.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5610.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5610.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5610 ztest5610.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5610.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5610.c
Checking for return value of vsnprintf()... Yes.

=== ztest5610.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5610.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:04:15 PM CEST
Checking for gcc...
=== ztest5952.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5952.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5952.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5952.c

Checking for shared library support...
=== ztest5952.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5952.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5952.so ztest5952.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest5952.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest5952.c
Checking for size_t... Yes.


=== ztest5952.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5952.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5952.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5952 ztest5952.c
Checking for strerror... Yes.

=== ztest5952.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5952.c
Checking for unistd.h... Yes.

=== ztest5952.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5952.c
Checking for stdarg.h... Yes.

=== ztest5952.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5952.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5952.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5952 ztest5952.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5952.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5952.c
Checking for return value of vsnprintf()... Yes.

=== ztest5952.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5952.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:05:54 PM CEST
Checking for gcc...
=== ztest6408.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6408.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6408.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6408.c

Checking for shared library support...
=== ztest6408.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6408.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6408.so ztest6408.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest6408.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest6408.c
Checking for size_t... Yes.


=== ztest6408.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6408.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6408.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6408 ztest6408.c
Checking for strerror... Yes.

=== ztest6408.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6408.c
Checking for unistd.h... Yes.

=== ztest6408.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6408.c
Checking for stdarg.h... Yes.

=== ztest6408.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6408.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6408.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6408 ztest6408.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6408.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6408.c
Checking for return value of vsnprintf()... Yes.

=== ztest6408.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6408.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:06:53 PM CEST
Checking for gcc...
=== ztest6833.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6833.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6833.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6833.c

Checking for shared library support...
=== ztest6833.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6833.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6833.so ztest6833.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest6833.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest6833.c
Checking for size_t... Yes.


=== ztest6833.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6833.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6833.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6833 ztest6833.c
Checking for strerror... Yes.

=== ztest6833.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6833.c
Checking for unistd.h... Yes.

=== ztest6833.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6833.c
Checking for stdarg.h... Yes.

=== ztest6833.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6833.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6833.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6833 ztest6833.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6833.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6833.c
Checking for return value of vsnprintf()... Yes.

=== ztest6833.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6833.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:07:26 PM CEST
Checking for gcc...
=== ztest7191.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7191.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7191.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7191.c

Checking for shared library support...
=== ztest7191.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7191.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7191.so ztest7191.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest7191.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest7191.c
Checking for size_t... Yes.


=== ztest7191.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7191.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7191.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7191 ztest7191.c
Checking for strerror... Yes.

=== ztest7191.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7191.c
Checking for unistd.h... Yes.

=== ztest7191.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7191.c
Checking for stdarg.h... Yes.

=== ztest7191.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7191.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7191.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7191 ztest7191.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7191.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7191.c
Checking for return value of vsnprintf()... Yes.

=== ztest7191.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7191.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:07:33 PM CEST
Checking for gcc...
=== ztest7345.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7345.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7345.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7345.c

Checking for shared library support...
=== ztest7345.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7345.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7345.so ztest7345.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest7345.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest7345.c
Checking for size_t... Yes.


=== ztest7345.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7345.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7345.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7345 ztest7345.c
Checking for strerror... Yes.

=== ztest7345.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7345.c
Checking for unistd.h... Yes.

=== ztest7345.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7345.c
Checking for stdarg.h... Yes.

=== ztest7345.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7345.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7345.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7345 ztest7345.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7345.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7345.c
Checking for return value of vsnprintf()... Yes.

=== ztest7345.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7345.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:26:53 PM CEST
Checking for gcc...
=== ztest7979.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7979.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7979.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7979.c

Checking for shared library support...
=== ztest7979.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7979.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7979.so ztest7979.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest7979.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest7979.c
Checking for size_t... Yes.


=== ztest7979.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7979.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7979.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7979 ztest7979.c
Checking for strerror... Yes.

=== ztest7979.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7979.c
Checking for unistd.h... Yes.

=== ztest7979.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7979.c
Checking for stdarg.h... Yes.

=== ztest7979.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7979.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7979.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7979 ztest7979.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7979.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7979.c
Checking for return value of vsnprintf()... Yes.

=== ztest7979.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7979.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:28:32 PM CEST
Checking for gcc...
=== ztest8615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8615.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8615.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8615.c

Checking for shared library support...
=== ztest8615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8615.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8615.so ztest8615.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest8615.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest8615.c
Checking for size_t... Yes.


=== ztest8615.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8615.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8615.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8615 ztest8615.c
Checking for strerror... Yes.

=== ztest8615.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8615.c
Checking for unistd.h... Yes.

=== ztest8615.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8615.c
Checking for stdarg.h... Yes.

=== ztest8615.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8615.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8615 ztest8615.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8615.c
Checking for return value of vsnprintf()... Yes.

=== ztest8615.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8615.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:29:09 PM CEST
Checking for gcc...
=== ztest9071.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9071.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9071.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9071.c

Checking for shared library support...
=== ztest9071.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9071.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9071.so ztest9071.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest9071.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest9071.c
Checking for size_t... Yes.


=== ztest9071.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9071.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9071.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9071 ztest9071.c
Checking for strerror... Yes.

=== ztest9071.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9071.c
Checking for unistd.h... Yes.

=== ztest9071.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9071.c
Checking for stdarg.h... Yes.

=== ztest9071.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9071.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9071.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9071 ztest9071.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9071.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9071.c
Checking for return value of vsnprintf()... Yes.

=== ztest9071.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9071.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 05:29:58 PM CEST
Checking for gcc...
=== ztest9619.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9619.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9619.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9619.c

Checking for shared library support...
=== ztest9619.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9619.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9619.so ztest9619.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest9619.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest9619.c
Checking for size_t... Yes.


=== ztest9619.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9619.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9619.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9619 ztest9619.c
Checking for strerror... Yes.

=== ztest9619.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9619.c
Checking for unistd.h... Yes.

=== ztest9619.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9619.c
Checking for stdarg.h... Yes.

=== ztest9619.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9619.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9619.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9619 ztest9619.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9619.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9619.c
Checking for return value of vsnprintf()... Yes.

=== ztest9619.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9619.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 08:01:36 PM CEST
Checking for gcc...
=== ztest560.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest560.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest560.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest560.c

Checking for shared library support...
=== ztest560.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest560.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest560.so ztest560.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest560.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest560.c
Checking for size_t... Yes.


=== ztest560.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest560.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest560.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest560 ztest560.c
Checking for strerror... Yes.

=== ztest560.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest560.c
Checking for unistd.h... Yes.

=== ztest560.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest560.c
Checking for stdarg.h... Yes.

=== ztest560.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest560.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest560.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest560 ztest560.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest560.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest560.c
Checking for return value of vsnprintf()... Yes.

=== ztest560.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest560.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue 01 Jun 2021 09:28:39 PM CEST
Checking for gcc...
=== ztest9944.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9944.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9944.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9944.c

Checking for shared library support...
=== ztest9944.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9944.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9944.so ztest9944.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest9944.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest9944.c
Checking for size_t... Yes.


=== ztest9944.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9944.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9944.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9944 ztest9944.c
Checking for strerror... Yes.

=== ztest9944.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9944.c
Checking for unistd.h... Yes.

=== ztest9944.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9944.c
Checking for stdarg.h... Yes.

=== ztest9944.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9944.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9944.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9944 ztest9944.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9944.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9944.c
Checking for return value of vsnprintf()... Yes.

=== ztest9944.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9944.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


